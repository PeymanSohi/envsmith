[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "envsmith"
version = "0.2.0"
description = "Smart .env loader: multi-file, validation, schema, secrets, CLI, auto-reload"
readme = "README.md"
requires-python = ">=3.9"
license = { text = "MIT" }
authors = [
    { name = "Peyman Tahmasebi Sohi", email = "peymantahmasebi10@gmail.com" }
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Systems Administration",
    "Topic :: Utilities",
    "Environment :: Console",
    "Framework :: FastAPI",
    "Framework :: Django",
]
keywords = ["environment", "variables", "dotenv", "configuration", "validation", "schema", "secrets"]
dependencies = [
    "pyyaml>=6.0",
    "typing-extensions>=4.0; python_version<\"3.11\"",
]

[project.optional-dependencies]
watch = ["watchdog>=3.0"]
fastapi = ["fastapi>=0.110", "pydantic>=2.0"]
django = ["Django>=4.0"]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "mypy>=1.0",
    "ruff>=0.1.0",
    "rich>=13.0",
    "black>=23.0",
    "isort>=5.0",
]
test = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "pytest-mock>=3.0",
]
docs = [
    "sphinx>=6.0",
    "sphinx-rtd-theme>=1.0",
    "myst-parser>=1.0",
]

[project.scripts]
envloader = "envsmith.cli:main"
envsmith = "envsmith.cli:main"

[project.urls]
Homepage = "https://github.com/yourname/envsmith"
Repository = "https://github.com/yourname/envsmith"
Documentation = "https://envsmith.readthedocs.io/"
Issues = "https://github.com/yourname/envsmith/issues"
Changelog = "https://github.com/yourname/envsmith/blob/main/CHANGELOG.md"

[project.gui-scripts]
smart-envloader-gui = "smart_envloader.gui:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["smart_envloader*", "envsmith*"]

[tool.setuptools.package-data]
smart_envloader = ["py.typed"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=smart_envloader",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["smart_envloader"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "yaml.*",
    "watchdog.*",
    "fastapi.*",
    "django.*",
    "pydantic.*",
]
ignore_missing_imports = true

[tool.ruff]
target-version = "py39"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["B011"]

[tool.black]
target-version = ['py39']
line-length = 88
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["smart_envloader"]
